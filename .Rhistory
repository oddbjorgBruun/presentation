sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid.newpage()
#Triple category venn diagram, calculates more granular intersections
# Print plot to png file
png(file = "tripleVenn_fsm_p.png", width = 800)
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
grid.newpage()
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
grid.newpage()
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
grid.newpage()
grid.newpage()
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
?gpar
library(grid)
tripleVenn <- draw.triple.venn(area1          = 162710,
area2           = 311577,
area3           = 854731,
n12             = 52322,
n23             = 221707,
n13             = 98394,
n123            = 39790,
category        = c('Michelet', 'Syria', 'Front'),
fill            = c('violetred', 'blue', 'turquoise3'),
cat.col         = c('darkred', 'darkblue', 'aquamarine4'),
cex             = c(5/2,4/2,5/2,4/2,4/2,4/2,5/2),
cat.cex         = c(3,3,3),
cat.dist        = 0.08,
label.col       = c("black", "white", "black", "white", "white", "white", "black"),
euler.d         = TRUE,
scaled          = TRUE,
print.mode      = c("raw", "percent"),
sigdigs         = 0,
rotation.degree = 45,
margin          = 0.01,
inverted        = TRUE,
offset          = 0.05
)
# format prettyNum - absolute numbers only
for(i in 1:length(tripleVenn)){
if(!is.null(tripleVenn[[i]][["label"]]) &&
!is.na(as.numeric(tripleVenn[[i]][["label"]]))
) {
tripleVenn[[i]][["label"]] <- prettyNum(tripleVenn[[i]][["label"]], big.mark = ",", scientific = FALSE)
}
}
# for raw and percent diagrams
## check label pos
xxx <- lapply(tripleVenn, function(i) i$label)
str(xxx)
## set new labels
tripleVenn[[7]][["label"]] <- "51 784\n(5%)"
tripleVenn[[8]][["label"]] <- "12 532\n(1%)"
tripleVenn[[9]][["label"]] <- "77 338\n(8%)"
tripleVenn[[10]][["label"]] <- "58 604\n(6%)"
tripleVenn[[11]][["label"]] <- "39 790\n(4%)"
tripleVenn[[12]][["label"]] <- "181 917\n(20%)"
tripleVenn[[13]][["label"]] <- "574 420\n(60%)"
# draw diagram
grid.draw(tripleVenn)
grid::grid.text('Universe = ~ 996K', x=0.90, y=0.04, gp=gpar(col="black", fontsize=12, fontface=1))
# Determining intersections or setdiffs by filtering by row sums
MultiSetFun = function(fun, lstUnique_all) {
# performs a set function (e.g. intersect, setdiff) on x
# where x is a list of vectors of the same type but not necessarily the same length
fun = tolower(fun)
this.intersect = function(M, v) {
return(names(which(rowSums(M) == sum(v))))
}
this.setdiff = function(M, v) {
D = lapply(v, function(i){
names(which(rowSums(M) == i))
})
names(D) = colnames(M)
return(D)
}
this.union = function(M, v) {
return(rownames(M))
}
# concatenate all unique elements in x - this is effectively a union
U = sort(unique(do.call('c', unname(x))))
# set truth map, (i,j) is true if element i is in set j
M = as.matrix(as.data.frame(lapply(x, function(l){U %in% l})))
rownames(M) = U
# apply column values
v = 2^seq(0, ncol(M)-1)
M = t(t(M) * v)
return(
switch(fun,
intersect = this.intersect(M,v),
setdiff   = this.setdiff(M,v),
union     = this.union(M,v),
NULL) )
}
MultiSetFun()
MultiSetFun(lstUnique_all)
library(slidify)
library(slidifyLibraries)
author("Presentation")
library(googleVis)
install.packages("googleVis")
# Chunk 1
require(googleVis)
M1 = gvisMotionChart(fruits, idvar='Fruit', timevar="Year"
)
print(M1, tag='chart')
slidify("index.Rmd")
library(ggplot2)
data(diamonds)
diamonds<-diamonds[sample(1:nrow(diamonds),2000),]
ggplot(diamonds, aes(carat, price))+geom_point(color="firebrick")
slidify("index.Rmd")
# Chunk 1
library(ggplot2)
data(diamonds)
diamonds<-diamonds[sample(1:nrow(diamonds),2000),]
ggplot(diamonds, aes(carat, price))+geom_point(color="firebrick")
```{r results = 'asis', commment = NA, message = F, echo = F}
require(googleVis)
M1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
print(M1, tag = 'chart')
```
